[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dspy-kit"
version = "0.1.0"
description = "Comprehensive toolkit for DSPy programs: evaluation, synthetic data generation, and red teaming following OpenAI and Anthropic best practices."
authors = [{ name = "Goooyi", email = "gaaoyi@gmail.com" }]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9, <3.13"
keywords = ["dspy", "evaluation", "llm", "metrics", "ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "dspy-ai>=2.6.23,<3.0.0",
    "openai>=1.0.0",
    "anthropic>=0.20.0",
    "pydantic>=2.0.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
    "rapidfuzz>=3.0.0",
    "rouge-score>=0.1.2",
    "sentence-transformers>=2.2.0",
    "nltk>=3.8.0",
    "pyyaml>=6.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=4.2.0",
]

[project.urls]
Homepage = "https://github.com/Goooyi/dspy-kit"
Documentation = "https://github.com/Goooyi/dspy-kit#readme"
Repository = "https://github.com/Goooyi/dspy-kit"
"Bug Tracker" = "https://github.com/Goooyi/dspy-kit/issues"

[tool.hatch.build.targets.wheel]
packages = ["dspy_kit"]

[tool.hatch.build.targets.sdist]
include = [
    "/dspy_evals",
    "/tests",
    "/examples",
    "/docs",
    "README.md",
    "LICENSE",
]

[tool.pyright]
venvPath = ".venv"
venv = ""
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "**/site-packages/**",
    ".venv/**",
    "build/**",
    "dist/**",
]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py39"
src = ["dspy_evals", "tests"]

[tool.ruff.lint]
select = [
    "F",      # Pyflakes
    "E",      # Pycodestyle
    "W",      # Pycodestyle warnings
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "TID252", # Absolute imports
]
ignore = [
    "E501", # Line too long (handled by formatter)
    "B008", # Function calls in argument defaults
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
docstring-code-format = false
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"**/{tests,testing,docs}/*" = ["ALL"]
"**/__init__.py" = ["F401", "F403"]  # Allow unused imports in __init__.py
".venv/*" = ["ALL"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=dspy_evals",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests that make API calls",
]

[tool.coverage.run]
source = ["dspy_evals"]
omit = [
    "tests/*",
    "examples/*",
    "*/migrations/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
